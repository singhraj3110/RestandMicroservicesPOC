package com.in28minutes.microservices.currencyconversionservice;

import org.springframework.cloud.netflix.ribbon.RibbonClient;
import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;

//import com.in28minutes.microservices.currencyexchangeservice.ExchangeValue;

@FeignClient(name="currency-exchange-service") // to call another minsroservices using less code
@RibbonClient(name="currency-exchange-service") // for load balancing and also exchange instances are not hardcoded using these
public interface CurrencyExchangeProxy {
	
	@GetMapping("/currency-exchange/from/{from}/to/{to}")
	public CurrencyConversionBean retriveExchangeValue(@PathVariable("from") String from,@PathVariable("to") String  to);

}
